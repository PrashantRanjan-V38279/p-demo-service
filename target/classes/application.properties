server.servlet.contextPath=/p-demo
#application properties
app.serviceName=p-demo
app.version=1.0
#this property will be injected by the Jenkins at run time in the docker container. cloud0 | cloud1 | cloud2 |... app.runtime.network.id=local machine
app.runtime.network.id=local machine

#spring properties
spring.profiles.active=local
server.port=80
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration,org.springframework.boot.actuate.autoconfigure.security.servlet.ManagementWebSecurityAutoConfiguration

#spring boot Actuator properties 
management.endpoint.shutdown.enabled=true

spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=11MB
server.max-http-header-size=40KB

#s-account-hub detail
app.s-account-hub.service.base.url=s-account-hub-1
#app.s-account-hub.service.base.url=s-account-hub
app.s-account-hub.service.version=v1
app.s-account-hub.service.url.full=${app.akana.base.hostname}/${app.s-account-hub.service.base.url}/${app.s-account-hub.service.version}
app.s-account-hub.service.url.accounts=${app.s-account-hub.service.url.full}/accounts
app.s-account-hub.service.url.account-id=${app.s-account-hub.service.url.accounts}/{account-id}
app.s-account-hub.service.url.accounts.actions=${app.s-account-hub.service.url.accounts}/actions/{action-id}
app.s-account-hub.service.url.account-id.actions=${app.s-account-hub.service.url.account-id}/actions/{action-id}

#SSL properties
app.service.certificate.BasePath=/service_certificates
#app.service.certificate.BasePath=C:/Project_Work/Project_Certificates
app.service.certificate.folder=${app.serviceName}
app.service.certificate.fullpath=${app.service.certificate.BasePath}/${app.service.certificate.folder}
app.service.certificate.keystore.name=${app.service.certificate.folder}.jks
app.service.certificate.truststore.name=truststore_${app.service.certificate.folder}.jks
app.service.certificate.keystore.password=${app.serviceName}
app.service.certificate.truststore.password=${app.serviceName}
app.service.certificate.key.password=${app.serviceName}



